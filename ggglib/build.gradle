/*
 * Created by Gigigo Android Team
 *
 * Copyright (C) 2016 Gigigo Mobile Services SL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {

  compileSdkVersion parent.ext.androidCompileSdkVersion
  buildToolsVersion parent.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion parent.ext.androidMinSdkVersion
    targetSdkVersion parent.ext.androidTargetSdkVersion
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'LICENSE.txt'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

    lintOptions {
      abortOnError false
    }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

dependencies {

  compile 'com.github.nuborisar:Dexter:3.2'
/*
  compile (parent.ext.dependencies.dexter){
      exclude group:'com.android.support', module:'recyclerview-v7'
      exclude group:'com.android.support', module:'support-annotations'
  }
*/

  /*
  compile 'com.android.support:appcompat-v7:23.2.1'
  compile 'com.android.support:design:23.2.1'
   */
  compile parent.ext.dependencies.retrofit
  compile parent.ext.dependencies.gsonConverter

  compile project (':ggg-java-lib')
  compile project (':ggglogger')

  testCompile parent.ext.testDependencies.junit
  testCompile parent.ext.testDependencies.mockito
  testCompile parent.ext.dependencies.gsonConverter
  testCompile parent.ext.testDependencies.mockWebServer
}

//apply plugin: 'com.google.gms.google-services'

// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
  javadoc.classpath += files(android.libraryVariants.collect { variant ->
    variant.javaCompile.classpath.files
  })
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}